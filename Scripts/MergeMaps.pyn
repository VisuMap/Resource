# MergeMaps.pyn
#
# Caputure tSNE maps at different exaggeration levels ( i.e. scale ) and
# then merging them into a single tSNE maps.
#
markerList = [700, 800, 900, 1000]
markerList = [k*1 for k in markerList]
mapIs3D = False
showMaps = False
mapDim = 3 if mapIs3D else 2
epochs = markerList[-1]
bsList = vv.Dataset.BodyListEnabled()
ntMap = New.NumberTable(bsList, mapDim*len(markerList))

cs = New.CsObject('''
	public void CaptureOneMap(INumberTable nt, List<IBody> bsList, int column0, bool mapIs3D) {
		double[][] M = nt.Matrix as double[][];
   	for(int k=0; k<bsList.Count; k++) {
			IBody b = bsList[k];
			double[] R = M[k];
			R[column0+0] = b.X;
			R[column0+1] = b.Y;
			if ( mapIs3D )
				R[column0+2] = b.Z;
		}
   }
''')

def BodyMoved():
	if pp.CurrentLoops in markerList:
		idx = markerList.index(pp.CurrentLoops)
		markerList[idx] = -1
		cs.CaptureOneMap(ntMap, bsList, idx*mapDim, mapIs3D);
		if showMaps:
			New.MapSnapshot().Show()

mds = New.TsneMap()
mds.MaxLoops = epochs
mds.RefreshFreq = 50
mds.Is3D = mapIs3D
mds.InitialExaggeration = 3.0
mds.FinalExaggeration = 1.1
mds.AutoNormalizing = False
mds.AutoScaling = True
mds.TracingType = 6
mds.PerplexityRatio = 0.02

vv.EventManager.OnBodyMoved('@BodyMoved()', mds)
mds.Show().Reset().Start()
if mds.CurrentLoops != epochs:
	mds.Close()
	vv.Return()
mds.Close()

md2 = New.MdsCluster(ntMap)
md2.Metric = "EuclideanMetric"
md2.MaxLoops = epochs
md2.InitialExaggeration = 4.0
md2.FinalExaggeration = 1.0
md2.PerplexityRatio = 0.05
md2.MdsAlgorithm = 2
md2.AutoNormalizing= True
md2.RefreshFreq = 50
md2.Is3D = mapIs3D
md2.Show().Reset().Start()

md2.CaptureMap()
md2.Close()




